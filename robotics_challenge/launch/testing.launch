<launch> 
    <!-- Turtlebot3 Gazebo -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="x_pos" default="0.0"/>
  <arg name="y_pos" default="0.0"/>
  <arg name="z_pos" default="0.0"/>

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find robotics_challenge)/worlds/competetion.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />

  <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x_pos) -y $(arg y_pos) -z $(arg z_pos) -param robot_description" />
  
  
    <!-- Turtlebot3 Navigation 
  <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
    <arg name="model" value="waffle_pi"/>
  </include>-->

    <!-- Turtlebot3 SLAM 
  <include file="$(find turtlebot3_slam)/launch/turtlebot3_slam.launch">
    <arg name="slam_methods" value="gmapping" />
    <arg name="open_rviz"    value="true" />
  </include>
  
  <node name="detect_ball" pkg="robotics_challenge" type="detect_ball.py" output="screen"/>
  <node name="decision_making" pkg="robotics_challenge" type="decision_making.py" output="screen"/>-->
</launch>
